FROM --platform=${BUILDPLATFORM:-linux/amd64} mcr.microsoft.com/dotnet/sdk:5.0 AS build

ARG TARGETPLATFORM
ARG BUILDPLATFORM
ARG TARGETOS
ARG TARGETARCH

ENV DOTNET_CLI_TELEMETRY_OPTOUT 1

WORKDIR /src
COPY *.sln .
COPY MeetHut.Backend/*.csproj ./MeetHut.Backend/
COPY MeetHut.CommonTools/*.csproj ./MeetHut.CommonTools/
COPY MeetHut.DataAccess/*.csproj ./MeetHut.DataAccess/
COPY MeetHut.Services/*.csproj ./MeetHut.Services/

RUN dotnet restore

COPY MeetHut.Backend/. ./MeetHut.Backend/
COPY MeetHut.CommonTools/. ./MeetHut.CommonTools/
COPY MeetHut.DataAccess/. ./MeetHut.DataAccess/
COPY MeetHut.Services/. ./MeetHut.Services/

WORKDIR "/src/MeetHut.Backend"

RUN curl -sL https://deb.nodesource.com/setup_16.x -o nodesource_setup.sh && bash nodesource_setup.sh && echo "deb https://dl.yarnpkg.com/debian/ stable main" 
RUN curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | gpg --dearmor | tee /usr/share/keyrings/yarnkey.gpg >/dev/null
RUN echo "deb [signed-by=/usr/share/keyrings/yarnkey.gpg] https://dl.yarnpkg.com/debian stable main" | tee /etc/apt/sources.list.d/yarn.list
RUN apt update && apt install -y nodejs yarn

RUN if [ "${TARGETARCH}" = "amd64" ]; then \
    export RID=linux-musl-x64; \
    else \
    export RID=linux-arm64; \
    fi && \
    dotnet publish -r $RID -c Release -o /app/publish

FROM --platform=${TARGETPLATFORM:-linux/amd64} mcr.microsoft.com/dotnet/aspnet:5.0

WORKDIR /app
EXPOSE 5000
EXPOSE 5001
ENV DOTNET_CLI_TELEMETRY_OPTOUT 1
ENV ASPNETCORE_ENVIRONMENT Release

COPY --from=build /app/publish .

ENTRYPOINT ["dotnet", "MeetHut.Backend.dll"]
